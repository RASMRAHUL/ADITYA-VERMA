416. Partition Equal Subset Sum... (LeetCode) 

TIME COMPLEXITY  --> O(N*W)   (Here W means Half of the sum of array...)
SPACE COMPLEXIT  -->O(N*W) 
class Solution {
    bool subsetSum ( vector<int>& arr, int sum)
    {
        int n = arr.size();
        bool dp[n + 1][sum + 1];
        for (int i = 0; i <= n; i++)
            dp[i][0] = true;

        for (int j = 1; j <= sum; j++)
            dp[0][j] = false;
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= sum; j++)
            {
                if (j < arr[i - 1])
                    dp[i][j] = dp[i - 1][j];
                else if (j >= arr[i - 1])
                    dp[i][j] = dp[i - 1][j] || dp[i - 1][j - arr[i - 1]];
            }
        }
        return dp[n][sum];
    }
public:
    bool canPartition(vector<int>& nums) {
        int n = nums.size();
        int sum = 0;
        for(int i = 0 ; i < n ; i++)
        {
            sum = sum + nums[i];
        }
        if(sum % 2 != 0)
            return false;
        else //if (sum % 2 == 0)
            return subsetSum (nums, sum/2);

    }
};
